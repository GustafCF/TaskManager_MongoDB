variables:
  APP_PATH: .
  DOCKER_TAG_NAME: task_mongodb:latest
  NOME_DO_CONTAINER: task_app_container
  NOME_DA_REDE: app-network
  BIND_DE_PORTA: 8080:8080
  MONGO_TAG: mongo:4.4
  MONGO_EXPRESS_TAG: mongo-express:1.0

stages:
  - test
  - build
  - deploy

Testes_Unitarios:
  stage: test
  artifacts:
    paths:
      - target/surefire-reports/
  cache:
    paths:
      - .m2/repository
      - target/
  image: maven:3.9-eclipse-temurin-21
  services:
    - name: mongo:4.4
      alias: mongo
      command: [--auth]
  variables:
    MONGO_INITDB_ROOT_USERNAME: admin
    MONGO_INITDB_ROOT_PASSWORD: admin
    SPRING_DATA_MONGODB_URI: "mongodb://admin:admin@mongo:27017/workshop_mongo?authSource=admin"
  script:
    - |
      echo "Waiting for MongoDB to be ready..."
      for i in {1..15}; do
        if docker exec mongo mongosh --eval "db.runCommand({ ping: 1 })" --quiet; then
          echo "MongoDB is ready!"
          break
        fi
        echo "Waiting for MongoDB... Attempt $i/15"
        sleep 2
      done
    - mvn clean test

Limpar_Ambiente:
  stage: prebuild
  only:
    - /^release_[0-9]+(?:.[0-9]+)+$/
    - dev
  except:
    - main  
  dependencies: []
  cache: []
  variables:
    GIT_STRATEGY: none
  script: 
    - docker container stop $NOME_DO_CONTAINER || true
    - docker container rm $NOME_DO_CONTAINER || true
    - docker image rm $DOCKER_TAG_NAME || true
    - docker network rm $NOME_DA_REDE || true

Construir_Imagem:
  stage: build
  only:
    - /^release_[0-9]+(?:.[0-9]+)+$/
    - dev
    - main
  dependencies: []
  cache: 
    paths:
      - $APP_PATH
  script:
    - docker build --no-cache -t $DOCKER_TAG_NAME .

Implantar_Aplicacao:
  stage: deploy
  only:
    - /^release_[0-9]+(?:.[0-9]+)+$/
    - dev
    - main
  dependencies: []
  cache: []
  variables:
    GIT_STRATEGY: none
  script:
    - docker network create $NOME_DA_REDE || true
    - docker run -d --name mongodb --network $NOME_DA_REDE -e MONGO_INITDB_ROOT_USERNAME=admin -e MONGO_INITDB_ROOT_PASSWORD=admin $MONGO_TAG
    - docker run -d --name mongo_express --network $NOME_DA_REDE -e ME_CONFIG_MONGODB_ADMINUSERNAME=admin -e ME_CONFIG_MONGODB_ADMINPASSWORD=admin -e ME_CONFIG_MONGODB_URL="mongodb://admin:admin@mongodb:27017/" -p 8081:8081 $MONGO_EXPRESS_TAG
    - docker run --name $NOME_DO_CONTAINER --network $NOME_DA_REDE -p $BIND_DE_PORTA -e SPRING_DATA_MONGODB_URI="mongodb://admin:admin@mongodb:27017/workshop_mongo?authSource=admin" -d $DOCKER_TAG_NAME
