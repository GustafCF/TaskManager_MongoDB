variables:
  IMAGEM_MONGO: mongo:4.4
  IMAGEM_APP: registry.gitlab.com/g.cesarfranco7/taskmanager_mongodb
  BIND_DE_PORTA_MONGO: "27017:27017"
  BIND_DE_PORTA_APP: "8080:8080"
  PASTA_ORIGEM_VOLUME_MONGO: /C/docker/volumes/mongo
  NOME_DA_REDE: app-network
  NOME_CONTAINER_MONGO: mongodb
  NOME_CONTAINER_APP: task_app_container
  # Removidas variáveis de estado que não persistem entre jobs

stages:
  - build
  - deploy
  - start

before_script:
  - apt-get update && apt-get install -y docker.io docker-compose
  - docker --version

build:
  stage: build
  image: maven:3.9.6-eclipse-temurin-21
  script: 
    - mvn clean package -DskipTests
  artifacts:
    paths:
      - target/*.jar
    expire_in: 2 hours

deploy_infra:
  stage: deploy
  only:
    - dev
  script:
    # Verifica e cria rede se necessário
    - if ! docker network inspect $NOME_DA_REDE >/dev/null 2>&1; then docker network create $NOME_DA_REDE; fi
    
    # Verifica e cria container MongoDB se necessário
    - if ! docker container inspect $NOME_CONTAINER_MONGO >/dev/null 2>&1; then
        docker run --name $NOME_CONTAINER_MONGO --network $NOME_DA_REDE \
          -v $PASTA_ORIGEM_VOLUME_MONGO:/data/db -p $BIND_DE_PORTA_MONGO \
          -e MONGO_INITDB_ROOT_USERNAME=${MONGO_USER:-admin} \
          -e MONGO_INITDB_ROOT_PASSWORD=${MONGO_PASS:-admin} \
          -d $IMAGEM_MONGO;
      elif ! docker ps | grep $NOME_CONTAINER_MONGO >/dev/null; then
        docker start $NOME_CONTAINER_MONGO;
      fi

deploy_app:
  stage: deploy
  needs: [build]
  only:
    - dev
    - /^release_[0-9]+(?:.[0-9]+)+$/
  script: 
    - docker build -t $IMAGEM_APP:$CI_COMMIT_SHORT_SHA .
    - docker tag $IMAGEM_APP:$CI_COMMIT_SHORT_SHA $IMAGEM_APP:latest
    - docker push $IMAGEM_APP:latest
    
    # Verifica e cria container App se necessário
    - if ! docker container inspect $NOME_CONTAINER_APP >/dev/null 2>&1; then
        docker run --name $NOME_CONTAINER_APP --network $NOME_DA_REDE \
          -p $BIND_DE_PORTA_APP \
          -e DATA_MONGO_URI=mongodb://${MONGO_USER:-admin}:${MONGO_PASS:-admin}@$NOME_CONTAINER_MONGO:27017/workshop_mongo?authSource=admin \
          -d $IMAGEM_APP:latest;
      elif ! docker ps | grep $NOME_CONTAINER_APP >/dev/null; then
        docker start $NOME_CONTAINER_APP;
      fi

start_services:
  stage: start
  only:
    - dev
  script:
    # Garante que todos os serviços estão rodando
    - if ! docker ps | grep $NOME_CONTAINER_MONGO >/dev/null; then docker start $NOME_CONTAINER_MONGO; fi
    - if ! docker ps | grep $NOME_CONTAINER_APP >/dev/null; then docker start $NOME_CONTAINER_APP; fi
    - docker ps