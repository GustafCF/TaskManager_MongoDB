variables:
  APP_PATH: "task_mongoDB"
  DOCKER_TAG_NAME: $CI_REGISTRY_IMAGE:$CI_COMMIT_REF_SLUG
  NOME_DO_CONTAINER: task_app_container
  NOME_DA_REDE: app-network
  BIND_DE_PORTA: "8080:8080"
  MAVEN_OPTS: "-Dmaven.repo.local=.m2/repository"
  SPRING_PROFILES_ACTIVE: "test"
  MONGODB_URI: "mongodb://admin:admin@mongo:27017/workshop_mongo?authSource=admin"
  WAIT_TIMEOUT: "30"

stages:
  - test
  - build
  - deploy

Testes_Unitarios:
  stage: test
  artifacts:
    paths:
      - target/surefire-reports/
  cache:
    paths:
      - .m2/repository
      - target/
  image: maven:3.9-eclipse-temurin-21
  services:
    - name: mongo:6.0
      alias: mongo
      command: [--auth]
  variables:
    MONGO_INITDB_ROOT_USERNAME: admin
    MONGO_INITDB_ROOT_PASSWORD: admin
    SPRING_DATA_MONGODB_URI: "mongodb://admin:admin@mongo:27017/workshop_mongo?authSource=admin"
  script:
    - echo "Waiting for MongoDB to be ready..."
    - timeout 30 bash -c 'while ! docker exec mongo mongosh --eval "db.runCommand({ ping: 1 })" --quiet; do sleep 2; done'
    - mvn clean test

Build_Image:
  stage: build
  only:
    - dev
  image: docker:latest
  services:
    - docker:dind
  script:
    - cd $APP_PATH
    - docker build -t $DOCKER_TAG_NAME .
    - docker push $DOCKER_TAG_NAME

Deploy_Container:
  stage: deploy
  only:
    - dev
  image: docker:latest
  services:
    - docker:dind
  script:
    - docker network create $NOME_DA_REDE || true
    - docker stop $NOME_DO_CONTAINER || true
    - docker rm $NOME_DO_CONTAINER || true
    - docker run --name $NOME_DO_CONTAINER --network $NOME_DA_REDE -p $BIND_DE_PORTA -d $DOCKER_TAG_NAME